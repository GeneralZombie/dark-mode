!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("DarkMode",[],t):"object"==typeof exports?exports.DarkMode=t():e.DarkMode=t()}(window,(function(){return(()=>{"use strict";var e={979:(e,t,n)=>{function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}n.d(t,{default:()=>u});var d="dark",c="light",l="dark-mode",h={container:"body",darkModeClassName:"dark-mode-active",lightModeClassName:null,defaultDarkMode:!1,remember:!0,usePrefersColorScheme:!0,widgetContainer:"body",widgetClassName:"dark-mode-widget",useStyle:!0,widgetBackgroundLight:"#aaa",widgetBackgroundDark:"#000",widgetToggleLight:"#fff",widgetToggleDark:"#fff",widgetSize:3,widgetTransitionDuration:"0.1s",hideWidget:!1,ariaLabelText:"Toggle Dark Mode"};const u=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};r(this,e),this.options=i(i({},h),t),this.containerElement=document.querySelector(this.options.container),this.containerElement||(this.containerElement=document.getElementsByTagName("body")),this.mode=this._getInitialMode(),this.options.hideWidget||(this.options.useStyle&&this._addStyle(),this._createWidget(document.querySelector(this.options.widgetContainer)),this._addEventListener()),this.setMode(this.mode)}var t,n;return t=e,(n=[{key:"on",value:function(){this.setMode(d)}},{key:"off",value:function(){this.setMode(c)}},{key:"setMode",value:function(e){if(!this._modeIsValid(e))throw new Error('Invalid mode provided! Must be either "light" or "dark"');this.options.hideWidget||(this.inputElement.checked=e===d),this._handleModeChange(e)}},{key:"getMode",value:function(){return this.mode}},{key:"toggle",value:function(){if(this.options.hideWidget)this.mode===c?this._handleModeChange(d):this._handleModeChange(c);else{this.inputElement.checked=!this.inputElement.checked;var e=document.createEvent("HTMLEvents");e.initEvent("change",!1,!0),this.inputElement.dispatchEvent(e)}}},{key:"_handleModeChange",value:function(e){this.mode=e,e===d&&(this.options.lightModeClassName&&this.containerElement.classList.remove(this.options.lightModeClassName),this.options.darkModeClassName&&this.containerElement.classList.add(this.options.darkModeClassName)),e===c&&(this.options.darkModeClassName&&this.containerElement.classList.remove(this.options.darkModeClassName),this.options.lightModeClassName&&this.containerElement.classList.add(this.options.lightModeClassName)),this.options.remember&&this._saveModeToLocalStorage(e),this._triggerModeChangedEvent(e)}},{key:"_triggerModeChangedEvent",value:function(e){var t=new CustomEvent("darkModeChanged",{detail:{darkMode:e===d}});this.containerElement.dispatchEvent(t)}},{key:"_getInitialMode",value:function(){var e=this._loadModeFromLocalStorage();if(this._modeIsValid(e))return e;if(this.options.usePrefersColorScheme){if(window.matchMedia("(prefers-color-scheme: dark)").matches)return d;if(window.matchMedia("(prefers-color-scheme: light)").matches)return c}return this.options.defaultDarkMode?d:c}},{key:"_modeIsValid",value:function(e){return e===c||e===d}},{key:"_addEventListener",value:function(){var e=this;this.inputElement.addEventListener("change",(function(t){e._handleModeChange(t.target.checked?d:c)}))}},{key:"_createWidget",value:function(e){e||(e=document.getElementsByTagName("body"));var t=document.createElement("span");t.classList.add(this.options.widgetClassName),this.inputElement=document.createElement("input"),this.inputElement.type="checkbox";var n=this._uniqid("dark-mode-widget-input-");this.inputElement.id=n,this.inputElement.checked=this.mode===d;var o=document.createElement("label");o.setAttribute("for",n),o.setAttribute("aria-label",this.options.ariaLabelText),o.innerHTML=this.options.ariaLabelText,t.append(this.inputElement),t.append(o),e.prepend(t)}},{key:"_saveModeToLocalStorage",value:function(e){this.options.remember&&this._modeIsValid(e)&&e!==window.localStorage.getItem(l)&&window.localStorage.setItem(l,e)}},{key:"_loadModeFromLocalStorage",value:function(){return this.options.remember?window.localStorage.getItem(l):null}},{key:"_addStyle",value:function(){var e=this.options.widgetSize,t=this.options.widgetSize/2,n="\n            .".concat(this.options.widgetClassName," input[type=checkbox] {\n                height: 0;\n                width: 0;\n                display: none;\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox] + label {\n                background: ").concat(this.options.widgetBackgroundLight,";\n                transition: ").concat(this.options.widgetTransitionDuration,";\n                cursor: pointer;\n                text-indent: -9999px;\n                width: ").concat(e+"rem",";\n                height: ").concat(t+"rem",";\n                border-radius: ").concat(e+"rem",";\n                display: block;\n                position: relative;\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox] + label:after {\n                background: ").concat(this.options.widgetToggleLight,";\n                transition: ").concat(this.options.widgetTransitionDuration,";\n                content: '';\n                position: absolute;\n                top: ").concat(.05*t+"rem",";\n                left: ").concat(.05*t+"rem",";\n                width: ").concat(.9*t+"rem",";\n                height: ").concat(.9*t+"rem",";\n                border-radius: ").concat(.9*t+"rem","\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox] + label:after:active {\n                width:  ").concat(.65*e+"rem","\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox]:checked + label {\n                background: ").concat(this.options.widgetBackgroundDark,";\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox]:checked + label:after {\n                background: ").concat(this.options.widgetToggleDark,";\n                left: calc(100% - 0.075rem);\n                transform: translateX(-100%);\n            }\n        "),o=document.createElement("style");o.innerHTML=n,document.head.appendChild(o)}},{key:"_uniqid",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Date.now()/1e3,o=n.toString(16).split(".").join("");o.length<14;)o+="0";var i="";return t&&(i=".",i+=Math.round(1e8*Math.random())),e+o+i}}])&&s(t.prototype,n),e}()}},t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}return n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n(979)})().default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,