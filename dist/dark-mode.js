!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("DarkMode",[],t):"object"==typeof exports?exports.DarkMode=t():e.DarkMode=t()}(window,(function(){return(()=>{"use strict";var e={979:(e,t,n)=>{function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}n.d(t,{default:()=>u});var d="dark",c="light",l="dark-mode",h={container:"body",darkModeClassName:"dark-mode-active",lightModeClassName:null,defaultDarkMode:!1,remember:!0,usePrefersColorScheme:!0,widgetContainer:"body",widgetClassName:"dark-mode-widget",useStyle:!0,widgetBackgroundLight:"#aaa",widgetBackgroundDark:"#000",widgetToggleLight:"#fff",widgetToggleDark:"#fff",widgetSize:3,widgetTransitionDuration:"0.1s",hideWidget:!1,ariaLabelText:"Toggle Dark Mode"};const u=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};r(this,e),this.options=i(i({},h),t),this.id=this._uniqid(),this.containerElement=document.querySelector(this.options.container),this.containerElement||(this.containerElement=document.getElementsByTagName("body")),this.mode=this._getInitialMode(),this.options.hideWidget||(this.options.useStyle&&this._addStyle(),this._createWidget(document.querySelector(this.options.widgetContainer)),this._addEventListener()),this.setMode(this.mode)}var t,n;return t=e,(n=[{key:"on",value:function(){this.setMode(d)}},{key:"off",value:function(){this.setMode(c)}},{key:"setMode",value:function(e){if(!this._modeIsValid(e))throw new Error('Invalid mode provided! Must be either "light" or "dark"');this.options.hideWidget||(this.inputElement.checked=e===d),this._handleModeChange(e)}},{key:"getMode",value:function(){return this.mode}},{key:"toggle",value:function(){if(this.options.hideWidget)this.mode===c?this._handleModeChange(d):this._handleModeChange(c);else{this.inputElement.checked=!this.inputElement.checked;var e=document.createEvent("HTMLEvents");e.initEvent("change",!1,!0),this.inputElement.dispatchEvent(e)}}},{key:"_handleModeChange",value:function(e){this.mode=e,e===d&&(this.options.lightModeClassName&&this.containerElement.classList.remove(this.options.lightModeClassName),this.options.darkModeClassName&&this.containerElement.classList.add(this.options.darkModeClassName)),e===c&&(this.options.darkModeClassName&&this.containerElement.classList.remove(this.options.darkModeClassName),this.options.lightModeClassName&&this.containerElement.classList.add(this.options.lightModeClassName)),this.options.remember&&this._saveModeToLocalStorage(e),this._triggerModeChangedEvent(e)}},{key:"_triggerModeChangedEvent",value:function(e){var t=new CustomEvent("darkModeChanged",{detail:{darkMode:e===d}});this.containerElement.dispatchEvent(t)}},{key:"_getInitialMode",value:function(){var e=this._loadModeFromLocalStorage();if(this._modeIsValid(e))return e;if(this.options.usePrefersColorScheme){if(window.matchMedia("(prefers-color-scheme: dark)").matches)return d;if(window.matchMedia("(prefers-color-scheme: light)").matches)return c}return this.options.defaultDarkMode?d:c}},{key:"_modeIsValid",value:function(e){return e===c||e===d}},{key:"_addEventListener",value:function(){var e=this;this.inputElement.addEventListener("change",(function(t){e._handleModeChange(t.target.checked?d:c)}))}},{key:"_createWidget",value:function(e){e||(e=document.getElementsByTagName("body"));var t=document.createElement("span");t.classList.add(this.options.widgetClassName),this.inputElement=document.createElement("input"),this.inputElement.type="checkbox";var n=this._uniqid("dark-mode-widget-input-");this.inputElement.id=n,this.inputElement.checked=this.mode===d;var o=document.createElement("label");o.setAttribute("for",n),o.setAttribute("aria-label",this.options.ariaLabelText),o.innerHTML=this.options.ariaLabelText,t.append(this.inputElement),t.append(o),e.prepend(t)}},{key:"_saveModeToLocalStorage",value:function(e){this.options.remember&&this._modeIsValid(e)&&e!==window.localStorage.getItem(l)&&window.localStorage.setItem(l,e)}},{key:"_loadModeFromLocalStorage",value:function(){return this.options.remember?window.localStorage.getItem(l):null}},{key:"_addStyle",value:function(){var e=this.options.widgetSize,t=this.options.widgetSize/2,n="\n            .".concat(this.options.widgetClassName," input[type=checkbox] {\n                height: 0;\n                width: 0;\n                display: none;\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox] + label {\n                background: ").concat(this.options.widgetBackgroundLight,";\n                transition: ").concat(this.options.widgetTransitionDuration,";\n                cursor: pointer;\n                text-indent: -9999px;\n                width: ").concat(e+"rem",";\n                height: ").concat(t+"rem",";\n                border-radius: ").concat(e+"rem",";\n                display: block;\n                position: relative;\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox] + label:after {\n                background: ").concat(this.options.widgetToggleLight,";\n                transition: ").concat(this.options.widgetTransitionDuration,";\n                content: '';\n                position: absolute;\n                top: ").concat(.05*t+"rem",";\n                left: ").concat(.05*t+"rem",";\n                width: ").concat(.9*t+"rem",";\n                height: ").concat(.9*t+"rem",";\n                border-radius: ").concat(.9*t+"rem","\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox] + label:after:active {\n                width:  ").concat(.65*e+"rem","\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox]:checked + label {\n                background: ").concat(this.options.widgetBackgroundDark,";\n            }\n            .").concat(this.options.widgetClassName," input[type=checkbox]:checked + label:after {\n                background: ").concat(this.options.widgetToggleDark,";\n                left: calc(100% - 0.075rem);\n                transform: translateX(-100%);\n            }\n        "),o=document.createElement("style");o.innerHTML=n,document.head.appendChild(o)}},{key:"_uniqid",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Date.now()/1e3,o=n.toString(16).split(".").join("");o.length<14;)o+="0";var i="";return t&&(i=".",i+=Math.round(1e8*Math.random())),e+o+i}}])&&s(t.prototype,n),e}()}},t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}return n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n(979)})().default}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9EYXJrTW9kZS93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vRGFya01vZGUvLi9zcmMvZGFyay1tb2RlLmpzIiwid2VicGFjazovL0RhcmtNb2RlL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL0RhcmtNb2RlL3dlYnBhY2svc3RhcnR1cCIsIndlYnBhY2s6Ly9EYXJrTW9kZS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vRGFya01vZGUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJ3aW5kb3ciLCJEQVJLX01PREUiLCJMSUdIVF9NT0RFIiwiTE9DQUxfU1RPUkFHRV9LRVkiLCJEZWZhdWx0T3B0aW9ucyIsImNvbnRhaW5lciIsImRhcmtNb2RlQ2xhc3NOYW1lIiwibGlnaHRNb2RlQ2xhc3NOYW1lIiwiZGVmYXVsdERhcmtNb2RlIiwicmVtZW1iZXIiLCJ1c2VQcmVmZXJzQ29sb3JTY2hlbWUiLCJ3aWRnZXRDb250YWluZXIiLCJ3aWRnZXRDbGFzc05hbWUiLCJ1c2VTdHlsZSIsIndpZGdldEJhY2tncm91bmRMaWdodCIsIndpZGdldEJhY2tncm91bmREYXJrIiwid2lkZ2V0VG9nZ2xlTGlnaHQiLCJ3aWRnZXRUb2dnbGVEYXJrIiwid2lkZ2V0U2l6ZSIsIndpZGdldFRyYW5zaXRpb25EdXJhdGlvbiIsImhpZGVXaWRnZXQiLCJhcmlhTGFiZWxUZXh0Iiwib3B0aW9ucyIsInRoaXMiLCJpZCIsIl91bmlxaWQiLCJjb250YWluZXJFbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJtb2RlIiwiX2dldEluaXRpYWxNb2RlIiwiX2FkZFN0eWxlIiwiX2NyZWF0ZVdpZGdldCIsIl9hZGRFdmVudExpc3RlbmVyIiwic2V0TW9kZSIsIl9tb2RlSXNWYWxpZCIsIkVycm9yIiwiaW5wdXRFbGVtZW50IiwiY2hlY2tlZCIsIl9oYW5kbGVNb2RlQ2hhbmdlIiwiZXZlbnQiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJfc2F2ZU1vZGVUb0xvY2FsU3RvcmFnZSIsIl90cmlnZ2VyTW9kZUNoYW5nZWRFdmVudCIsIkN1c3RvbUV2ZW50IiwiZGV0YWlsIiwiZGFya01vZGUiLCJfbG9hZE1vZGVGcm9tTG9jYWxTdG9yYWdlIiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0IiwiZWxlbWVudCIsIndyYXBwZXJFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInR5cGUiLCJpbnB1dElkIiwibGFiZWxFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiaW5uZXJIVE1MIiwiYXBwZW5kIiwicHJlcGVuZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwid2lkdGgiLCJoZWlnaHQiLCJjc3MiLCJzdHlsZUVsZW1lbnQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJhIiwiYiIsImMiLCJEYXRlIiwibm93IiwiZCIsInRvU3RyaW5nIiwic3BsaXQiLCJqb2luIiwibGVuZ3RoIiwiZSIsIk1hdGgiLCJyb3VuZCIsInJhbmRvbSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiXSwibWFwcGluZ3MiOiJDQUFBLFNBQTJDQSxFQUFNQyxHQUMxQixpQkFB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QixJQUFoQkQsS0FBS0UsV0FFbEJiLEVBQUlLLEVBQUlLLE8sd0JDdFFuQkksRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLEdBQUdGLEVBQXlCRSxHQUMzQixPQUFPRixFQUF5QkUsR0FBVWpHLFFBRzNDLElBQUlDLEVBQVM4RixFQUF5QkUsR0FBWSxDQUdqRGpHLFFBQVMsSUFPVixPQUhBa0csRUFBb0JELEdBQVVoRyxFQUFRQSxFQUFPRCxRQUFTZ0csR0FHL0MvRixFQUFPRCxRQ2pCZixPQ0ZBZ0csRUFBb0JWLEVBQUksQ0FBQ3RGLEVBQVNtRyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hILEVBQW9CSyxFQUFFRixFQUFZQyxLQUFTSixFQUFvQkssRUFBRXJHLEVBQVNvRyxJQUM1RUUsT0FBT0MsZUFBZXZHLEVBQVNvRyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VKLEVBQW9CSyxFQUFJLENBQUNLLEVBQUtDLElBQVNMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdGRzFFWCxFQUFvQixNIiwiZmlsZSI6ImRhcmstbW9kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFwiRGFya01vZGVcIiwgW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiRGFya01vZGVcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiRGFya01vZGVcIl0gPSBmYWN0b3J5KCk7XG59KSh3aW5kb3csIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsImNvbnN0IERBUktfTU9ERSA9ICdkYXJrJ1xuY29uc3QgTElHSFRfTU9ERSA9ICdsaWdodCdcblxuY29uc3QgTE9DQUxfU1RPUkFHRV9LRVkgPSAnZGFyay1tb2RlJztcblxuY29uc3QgRGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgY29udGFpbmVyOiAnYm9keScsXG4gICAgZGFya01vZGVDbGFzc05hbWU6ICdkYXJrLW1vZGUtYWN0aXZlJyxcbiAgICBsaWdodE1vZGVDbGFzc05hbWU6IG51bGwsXG4gICAgZGVmYXVsdERhcmtNb2RlOiBmYWxzZSxcbiAgICByZW1lbWJlcjogdHJ1ZSxcbiAgICB1c2VQcmVmZXJzQ29sb3JTY2hlbWU6IHRydWUsXG4gICAgd2lkZ2V0Q29udGFpbmVyOiAnYm9keScsXG4gICAgd2lkZ2V0Q2xhc3NOYW1lOiAnZGFyay1tb2RlLXdpZGdldCcsXG4gICAgdXNlU3R5bGU6IHRydWUsXG4gICAgd2lkZ2V0QmFja2dyb3VuZExpZ2h0OiAnI2FhYScsXG4gICAgd2lkZ2V0QmFja2dyb3VuZERhcms6ICcjMDAwJyxcbiAgICB3aWRnZXRUb2dnbGVMaWdodDogJyNmZmYnLFxuICAgIHdpZGdldFRvZ2dsZURhcms6ICcjZmZmJyxcbiAgICB3aWRnZXRTaXplOiAzLFxuICAgIHdpZGdldFRyYW5zaXRpb25EdXJhdGlvbjogJzAuMXMnLFxuICAgIGhpZGVXaWRnZXQ6IGZhbHNlLFxuICAgIGFyaWFMYWJlbFRleHQ6ICdUb2dnbGUgRGFyayBNb2RlJ1xufVxuXG5jbGFzcyBEYXJrTW9kZSB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHtcbiAgICAgICAgICAgIC4uLkRlZmF1bHRPcHRpb25zLFxuICAgICAgICAgICAgLi4ub3B0aW9uc1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaWQgPSB0aGlzLl91bmlxaWQoKTtcblxuICAgICAgICB0aGlzLmNvbnRhaW5lckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMub3B0aW9ucy5jb250YWluZXIpO1xuICAgICAgICBpZiAoIXRoaXMuY29udGFpbmVyRWxlbWVudCkge1xuICAgICAgICAgICAgdGhpcy5jb250YWluZXJFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubW9kZSA9IHRoaXMuX2dldEluaXRpYWxNb2RlKCk7XG5cbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuaGlkZVdpZGdldCkge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy51c2VTdHlsZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FkZFN0eWxlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuX2NyZWF0ZVdpZGdldChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMub3B0aW9ucy53aWRnZXRDb250YWluZXIpKTtcblxuICAgICAgICAgICAgdGhpcy5fYWRkRXZlbnRMaXN0ZW5lcigpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRNb2RlKHRoaXMubW9kZSk7XG4gICAgfVxuXG4gICAgb24oKSB7XG4gICAgICAgIHRoaXMuc2V0TW9kZShEQVJLX01PREUpO1xuICAgIH1cblxuICAgIG9mZigpIHtcbiAgICAgICAgdGhpcy5zZXRNb2RlKExJR0hUX01PREUpO1xuICAgIH1cblxuICAgIHNldE1vZGUobW9kZSkge1xuICAgICAgICBpZiAoIXRoaXMuX21vZGVJc1ZhbGlkKG1vZGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbW9kZSBwcm92aWRlZCEgTXVzdCBiZSBlaXRoZXIgXCInICsgTElHSFRfTU9ERSArICdcIiBvciBcIicgKyBEQVJLX01PREUgKyAnXCInKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuaGlkZVdpZGdldCkge1xuICAgICAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQuY2hlY2tlZCA9IChtb2RlID09PSBEQVJLX01PREUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5faGFuZGxlTW9kZUNoYW5nZShtb2RlKTtcbiAgICB9XG5cbiAgICBnZXRNb2RlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tb2RlO1xuICAgIH1cblxuICAgIHRvZ2dsZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuaGlkZVdpZGdldCkge1xuICAgICAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQuY2hlY2tlZCA9ICF0aGlzLmlucHV0RWxlbWVudC5jaGVja2VkO1xuXG4gICAgICAgICAgICBjb25zdCBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiSFRNTEV2ZW50c1wiKTtcbiAgICAgICAgICAgIGV2ZW50LmluaXRFdmVudCgnY2hhbmdlJywgZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm1vZGUgPT09IExJR0hUX01PREUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVNb2RlQ2hhbmdlKERBUktfTU9ERSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZU1vZGVDaGFuZ2UoTElHSFRfTU9ERSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9oYW5kbGVNb2RlQ2hhbmdlKG1vZGUpIHtcbiAgICAgICAgdGhpcy5tb2RlID0gbW9kZTtcblxuICAgICAgICBpZiAobW9kZSA9PT0gREFSS19NT0RFKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmxpZ2h0TW9kZUNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMub3B0aW9ucy5saWdodE1vZGVDbGFzc05hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kYXJrTW9kZUNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMub3B0aW9ucy5kYXJrTW9kZUNsYXNzTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobW9kZSA9PT0gTElHSFRfTU9ERSkge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5kYXJrTW9kZUNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMub3B0aW9ucy5kYXJrTW9kZUNsYXNzTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmxpZ2h0TW9kZUNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMub3B0aW9ucy5saWdodE1vZGVDbGFzc05hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5yZW1lbWJlcikge1xuICAgICAgICAgICAgdGhpcy5fc2F2ZU1vZGVUb0xvY2FsU3RvcmFnZShtb2RlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX3RyaWdnZXJNb2RlQ2hhbmdlZEV2ZW50KG1vZGUpO1xuICAgIH1cblxuICAgIF90cmlnZ2VyTW9kZUNoYW5nZWRFdmVudChtb2RlKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdkYXJrTW9kZUNoYW5nZWQnLCB7ZGV0YWlsOiB7ZGFya01vZGU6IG1vZGUgPT09IERBUktfTU9ERX19KVxuICAgICAgICB0aGlzLmNvbnRhaW5lckVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgfVxuXG4gICAgX2dldEluaXRpYWxNb2RlKCkge1xuICAgICAgICBjb25zdCBtb2RlID0gdGhpcy5fbG9hZE1vZGVGcm9tTG9jYWxTdG9yYWdlKCk7XG5cbiAgICAgICAgaWYgKHRoaXMuX21vZGVJc1ZhbGlkKG1vZGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbW9kZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMudXNlUHJlZmVyc0NvbG9yU2NoZW1lKSB7XG4gICAgICAgICAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayknKS5tYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIERBUktfTU9ERTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCknKS5tYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIExJR0hUX01PREU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmRlZmF1bHREYXJrTW9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIERBUktfTU9ERTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBMSUdIVF9NT0RFO1xuICAgIH1cblxuICAgIF9tb2RlSXNWYWxpZChtb2RlKSB7XG4gICAgICAgIHJldHVybiBtb2RlID09PSBMSUdIVF9NT0RFIHx8IG1vZGUgPT09IERBUktfTU9ERTtcbiAgICB9XG5cbiAgICBfYWRkRXZlbnRMaXN0ZW5lcigpIHtcbiAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVNb2RlQ2hhbmdlKGV2ZW50LnRhcmdldC5jaGVja2VkID8gREFSS19NT0RFIDogTElHSFRfTU9ERSk7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgX2NyZWF0ZVdpZGdldChlbGVtZW50KSB7XG4gICAgICAgIGlmICghZWxlbWVudCkge1xuICAgICAgICAgICAgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5Jyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB3cmFwcGVyRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgd3JhcHBlckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLm9wdGlvbnMud2lkZ2V0Q2xhc3NOYW1lKTtcblxuICAgICAgICB0aGlzLmlucHV0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIHRoaXMuaW5wdXRFbGVtZW50LnR5cGUgPSAnY2hlY2tib3gnO1xuICAgICAgICBjb25zdCBpbnB1dElkID0gdGhpcy5fdW5pcWlkKCdkYXJrLW1vZGUtd2lkZ2V0LWlucHV0LScpO1xuICAgICAgICB0aGlzLmlucHV0RWxlbWVudC5pZCA9IGlucHV0SWQ7XG4gICAgICAgIHRoaXMuaW5wdXRFbGVtZW50LmNoZWNrZWQgPSAodGhpcy5tb2RlID09PSBEQVJLX01PREUpO1xuXG4gICAgICAgIGNvbnN0IGxhYmVsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGxhYmVsRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGlucHV0SWQpO1xuICAgICAgICBsYWJlbEVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgdGhpcy5vcHRpb25zLmFyaWFMYWJlbFRleHQpO1xuICAgICAgICBsYWJlbEVsZW1lbnQuaW5uZXJIVE1MID0gdGhpcy5vcHRpb25zLmFyaWFMYWJlbFRleHQ7XG5cbiAgICAgICAgd3JhcHBlckVsZW1lbnQuYXBwZW5kKHRoaXMuaW5wdXRFbGVtZW50KTtcbiAgICAgICAgd3JhcHBlckVsZW1lbnQuYXBwZW5kKGxhYmVsRWxlbWVudCk7XG5cbiAgICAgICAgZWxlbWVudC5wcmVwZW5kKHdyYXBwZXJFbGVtZW50KTtcbiAgICB9XG5cbiAgICBfc2F2ZU1vZGVUb0xvY2FsU3RvcmFnZShtb2RlKSB7XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zLnJlbWVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fbW9kZUlzVmFsaWQobW9kZSkgJiYgbW9kZSAhPT0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKExPQ0FMX1NUT1JBR0VfS0VZKSkge1xuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMX1NUT1JBR0VfS0VZLCBtb2RlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9sb2FkTW9kZUZyb21Mb2NhbFN0b3JhZ2UoKSB7XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zLnJlbWVtYmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9DQUxfU1RPUkFHRV9LRVkpO1xuICAgIH1cblxuICAgIF9hZGRTdHlsZSgpIHtcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLm9wdGlvbnMud2lkZ2V0U2l6ZTtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5vcHRpb25zLndpZGdldFNpemUgLyAyO1xuXG4gICAgICAgIGNvbnN0IGNzcyA9IGBcbiAgICAgICAgICAgIC4ke3RoaXMub3B0aW9ucy53aWRnZXRDbGFzc05hbWV9IGlucHV0W3R5cGU9Y2hlY2tib3hdIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC4ke3RoaXMub3B0aW9ucy53aWRnZXRDbGFzc05hbWV9IGlucHV0W3R5cGU9Y2hlY2tib3hdICsgbGFiZWwge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7dGhpcy5vcHRpb25zLndpZGdldEJhY2tncm91bmRMaWdodH07XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogJHt0aGlzLm9wdGlvbnMud2lkZ2V0VHJhbnNpdGlvbkR1cmF0aW9ufTtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6ICR7d2lkdGggKyAncmVtJ307XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAke2hlaWdodCArICdyZW0nfTtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAke3dpZHRoICsgJ3JlbSd9O1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC4ke3RoaXMub3B0aW9ucy53aWRnZXRDbGFzc05hbWV9IGlucHV0W3R5cGU9Y2hlY2tib3hdICsgbGFiZWw6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7dGhpcy5vcHRpb25zLndpZGdldFRvZ2dsZUxpZ2h0fTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAke3RoaXMub3B0aW9ucy53aWRnZXRUcmFuc2l0aW9uRHVyYXRpb259O1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB0b3A6ICR7KGhlaWdodCAqIDAuMDUpICsgJ3JlbSd9O1xuICAgICAgICAgICAgICAgIGxlZnQ6ICR7KGhlaWdodCAqIDAuMDUpICsgJ3JlbSd9O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAkeyhoZWlnaHQgKiAwLjkpICsgJ3JlbSd9O1xuICAgICAgICAgICAgICAgIGhlaWdodDogJHsoaGVpZ2h0ICogMC45KSArICdyZW0nfTtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAkeyhoZWlnaHQgKiAwLjkpICsgJ3JlbSd9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuJHt0aGlzLm9wdGlvbnMud2lkZ2V0Q2xhc3NOYW1lfSBpbnB1dFt0eXBlPWNoZWNrYm94XSArIGxhYmVsOmFmdGVyOmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6ICAkeyh3aWR0aCAqIDAuNjUpICsgJ3JlbSd9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuJHt0aGlzLm9wdGlvbnMud2lkZ2V0Q2xhc3NOYW1lfSBpbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkICsgbGFiZWwge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7dGhpcy5vcHRpb25zLndpZGdldEJhY2tncm91bmREYXJrfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC4ke3RoaXMub3B0aW9ucy53aWRnZXRDbGFzc05hbWV9IGlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHt0aGlzLm9wdGlvbnMud2lkZ2V0VG9nZ2xlRGFya307XG4gICAgICAgICAgICAgICAgbGVmdDogY2FsYygxMDAlIC0gMC4wNzVyZW0pO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIGA7XG5cbiAgICAgICAgY29uc3Qgc3R5bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICAgICAgc3R5bGVFbGVtZW50LmlubmVySFRNTCA9IGNzcztcblxuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlRWxlbWVudCk7XG4gICAgfVxuXG4gICAgX3VuaXFpZChhID0gJycsIGIgPSBmYWxzZSkge1xuICAgICAgICBjb25zdCBjID0gRGF0ZS5ub3coKSAvIDEwMDA7XG4gICAgICAgIGxldCBkID0gYy50b1N0cmluZygxNikuc3BsaXQoXCIuXCIpLmpvaW4oXCJcIik7XG4gICAgICAgIHdoaWxlIChkLmxlbmd0aCA8IDE0KSBkICs9IFwiMFwiO1xuICAgICAgICBsZXQgZSA9IFwiXCI7XG4gICAgICAgIGlmIChiKSB7XG4gICAgICAgICAgICBlID0gXCIuXCI7XG4gICAgICAgICAgICBlICs9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDEwMDAwMDAwMCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGEgKyBkICsgZTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERhcmtNb2RlOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gbW9kdWxlIGV4cG9ydHMgbXVzdCBiZSByZXR1cm5lZCBmcm9tIHJ1bnRpbWUgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xucmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oOTc5KTtcbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIl0sInNvdXJjZVJvb3QiOiIifQ==